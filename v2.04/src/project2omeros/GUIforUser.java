package project2omeros;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;

/**
 * This class is the interface that the user will interact with
 * @author GeorgeKirm
 * @author GT
 */
public class GUIforUser extends javax.swing.JFrame {

    /**
     * Creates new form GUIforUser
     */
    public GUIforUser() {
        initComponents();
        movieL.enable(false);
        performanceL.enable(false);
        Event temp = new Event();
        List<String> namesOfMovies = temp.getNamesOfMovies();
        for (String s : namesOfMovies) {
            movieL.addItem(s);
        }
        if(movieL.getItemCount()==0){
            movieL.addItem("No movies");
        }
        List<String> namesOfPerformances = temp.getNamesOfPerformances();
        for (String s : namesOfPerformances) {
            performanceL.addItem(s);
        }
        if(performanceL.getItemCount()==0){
            performanceL.addItem("No performances");
        }
        jPanel1.repaint();
        if(Account.cPasswordAndRights[1].equals("U")){
            jPanel3.removeAll();
            jPanel2.remove(cancelChangesB);
            jMenu1.remove(editCinemaHalls);
            jMenu1.remove(editTheaterHalls);
            remove(editHallsB);
        }else if(Account.cPasswordAndRights[1].equals("A")){
            editEventB.setEnabled(false);
            deleteEventB.setEnabled(false);
            bookB.setEnabled(false);
            addMovieB.setEnabled(false);
            cancelChangesB.setEnabled(false);
            cancelChangesB.setVisible(false);
        }
        revalidate();
        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        eventG = new javax.swing.ButtonGroup();
        bookB = new javax.swing.JButton();
        seeEvent = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        editHallsB = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        movieB = new javax.swing.JRadioButton();
        performanceL = new javax.swing.JComboBox();
        performanceB = new javax.swing.JRadioButton();
        movieL = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        eventTimeT = new javax.swing.JLabel();
        eventTitleShow = new javax.swing.JTextField();
        cancelChangesB = new javax.swing.JButton();
        eventActorsT = new javax.swing.JLabel();
        eventDirectorShow = new javax.swing.JTextField();
        eventTitleT = new javax.swing.JLabel();
        eventDescriptionT = new javax.swing.JLabel();
        eventTimeShow = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        eventActorsShow = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        eventDescriptionShow = new javax.swing.JTextArea();
        eventDirectorT = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        deleteEventB = new javax.swing.JButton();
        addMovieB = new javax.swing.JCheckBox();
        editEventB = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        editCinemaHalls = new javax.swing.JMenuItem();
        editTheaterHalls = new javax.swing.JMenuItem();
        changePassword = new javax.swing.JMenuItem();
        deleteAccount = new javax.swing.JMenuItem();
        logOut = new javax.swing.JMenuItem();
        quit = new javax.swing.JMenuItem();
        HelpB = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(576, 534));

        bookB.setText("Book event");
        bookB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookBActionPerformed(evt);
            }
        });

        seeEvent.setText("See event info");
        seeEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seeEventActionPerformed(evt);
            }
        });

        jLabel1.setText("You have not booked any event yet.");

        editHallsB.setText("Halls");
        editHallsB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editHallsBActionPerformed(evt);
            }
        });

        eventG.add(movieB);
        movieB.setText("Choose cinema movie:");
        movieB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movieBActionPerformed(evt);
            }
        });

        performanceL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                performanceLActionPerformed(evt);
            }
        });

        eventG.add(performanceB);
        performanceB.setText("Choose theater performance:");
        performanceB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                performanceBActionPerformed(evt);
            }
        });

        movieL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movieLActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(performanceB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(movieB, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(performanceL, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(movieL, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(movieB)
                    .addComponent(movieL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(performanceB)
                    .addComponent(performanceL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );

        eventTimeT.setText("Time:");

        eventTitleShow.setEditable(false);
        eventTitleShow.setText("-");
        eventTitleShow.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                eventTitleShowFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                eventTitleShowFocusLost(evt);
            }
        });

        cancelChangesB.setText("Cancel changes");
        cancelChangesB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelChangesBActionPerformed(evt);
            }
        });

        eventActorsT.setText("Actors:");

        eventDirectorShow.setEditable(false);
        eventDirectorShow.setText("-");
        eventDirectorShow.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                eventDirectorShowFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                eventDirectorShowFocusLost(evt);
            }
        });

        eventTitleT.setText("Title:");

        eventDescriptionT.setText("Description:");

        eventTimeShow.setEditable(false);
        eventTimeShow.setText("-");
        eventTimeShow.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                eventTimeShowFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                eventTimeShowFocusLost(evt);
            }
        });

        eventActorsShow.setEditable(false);
        eventActorsShow.setColumns(20);
        eventActorsShow.setLineWrap(true);
        eventActorsShow.setRows(5);
        eventActorsShow.setText("-");
        eventActorsShow.setWrapStyleWord(true);
        eventActorsShow.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                eventActorsShowFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                eventActorsShowFocusLost(evt);
            }
        });
        jScrollPane2.setViewportView(eventActorsShow);

        eventDescriptionShow.setEditable(false);
        eventDescriptionShow.setColumns(20);
        eventDescriptionShow.setLineWrap(true);
        eventDescriptionShow.setRows(5);
        eventDescriptionShow.setText("-");
        eventDescriptionShow.setWrapStyleWord(true);
        eventDescriptionShow.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                eventDescriptionShowFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                eventDescriptionShowFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(eventDescriptionShow);

        eventDirectorT.setText("Director:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eventTitleT)
                    .addComponent(eventDescriptionT)
                    .addComponent(eventDirectorT)
                    .addComponent(eventActorsT)
                    .addComponent(eventTimeT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                        .addComponent(jScrollPane2)
                        .addComponent(eventDirectorShow)
                        .addComponent(eventTitleShow))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(eventTimeShow, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cancelChangesB)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eventTitleT)
                    .addComponent(eventTitleShow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eventDescriptionT)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eventDirectorShow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eventDirectorT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eventActorsT)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eventTimeShow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eventTimeT)
                    .addComponent(cancelChangesB))
                .addGap(0, 0, 0))
        );

        deleteEventB.setText("Delete Event");
        deleteEventB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEventBActionPerformed(evt);
            }
        });

        addMovieB.setText("Add as new");
        addMovieB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMovieBActionPerformed(evt);
            }
        });

        editEventB.setText("Edit Event");
        editEventB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editEventBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editEventB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(deleteEventB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(addMovieB, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(editEventB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addMovieB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteEventB)
                .addGap(0, 0, 0))
        );

        jLabel2.setText("Add/remove Halls");

        jLabel3.setText("for this event");

        jMenu1.setText("File");

        editCinemaHalls.setText("Edit cinema halls");
        editCinemaHalls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCinemaHallsActionPerformed(evt);
            }
        });
        jMenu1.add(editCinemaHalls);

        editTheaterHalls.setText("Edit theater halls");
        editTheaterHalls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editTheaterHallsActionPerformed(evt);
            }
        });
        jMenu1.add(editTheaterHalls);

        changePassword.setText("Change password");
        changePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePasswordActionPerformed(evt);
            }
        });
        jMenu1.add(changePassword);

        deleteAccount.setText("Delete account");
        deleteAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAccountActionPerformed(evt);
            }
        });
        jMenu1.add(deleteAccount);

        logOut.setText("Log out");
        logOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutActionPerformed(evt);
            }
        });
        jMenu1.add(logOut);

        quit.setText("Quit");
        quit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitActionPerformed(evt);
            }
        });
        jMenu1.add(quit);

        jMenuBar1.add(jMenu1);

        HelpB.setText("Help");

        jMenuItem1.setText("Help");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        HelpB.add(jMenuItem1);

        jMenuBar1.add(HelpB);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(bookB, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(seeEvent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(29, 29, 29))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(editHallsB, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(seeEvent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editHallsB))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bookB)
                            .addComponent(jLabel1))))
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutActionPerformed
        dispose();
        Users temp1 = new Users();
        temp1.logOut();
        GUI temp2 = new GUI();
        temp2.setLocationRelativeTo(null);
        temp2.setVisible(true);
    }//GEN-LAST:event_logOutActionPerformed

    private void changePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePasswordActionPerformed
        GUIforChangePassword temp1 = new GUIforChangePassword();
        temp1.setLocationRelativeTo(null);
        temp1.setVisible(true);
        //dispose();
    }//GEN-LAST:event_changePasswordActionPerformed

    private void quitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_quitActionPerformed

    private void deleteAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAccountActionPerformed
        int n = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete your account?", 
                "Security Question", JOptionPane.YES_NO_OPTION);
        if (n == JOptionPane.YES_OPTION) {
            Users temp1 = new Users();
            dispose();
            temp1.deleteAccount();
            GUI temp2 = new GUI();
            temp2.setLocationRelativeTo(null);
            temp2.setVisible(true);
        } else if (n == JOptionPane.NO_OPTION) {

        } else {
            System.out.println("Heyo!!");
        }
    }//GEN-LAST:event_deleteAccountActionPerformed

    private void movieBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movieBActionPerformed
        movieL.setEnabled(true);
        performanceL.setEnabled(false);
        editEventB.setEnabled(false);
        deleteEventB.setEnabled(false);
        bookB.setEnabled(false);
    }//GEN-LAST:event_movieBActionPerformed

    private void performanceBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_performanceBActionPerformed
        movieL.setEnabled(false);
        performanceL.setEnabled(true);
        editEventB.setEnabled(false);
        deleteEventB.setEnabled(false);
        bookB.setEnabled(false);
    }//GEN-LAST:event_performanceBActionPerformed

    private void seeEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seeEventActionPerformed
        //
        Event temp = new Event();
        List<String> info;
        if(movieB.isSelected()){
            editEventB.setEnabled(true);
            if(movieL.getSelectedItem().equals("No movies")){
                eventTitleShow.setText("There is no event");
                eventDescriptionShow.setText("-");
                eventDirectorShow.setText("-");
                eventActorsShow.setText("-");
                eventTimeShow.setText("-");
            }else{
                deleteEventB.setEnabled(true);
                bookB.setEnabled(true);
                String nameOfEvent;
                nameOfEvent = movieL.getSelectedItem().toString();
                info = temp.showEvent(nameOfEvent,true);
                eventTitleShow.setText(nameOfEvent);
                eventDescriptionShow.setText(info.get(1));
                eventDirectorShow.setText(info.get(2));
                eventActorsShow.setText(info.get(3));
                eventTimeShow.setText(info.get(4));
            }
        }else if(performanceB.isSelected()){
            editEventB.setEnabled(true);
            if(performanceL.getSelectedItem().equals("No performances")){
                eventTitleShow.setText("There is no event");
                eventDescriptionShow.setText("-");
                eventDirectorShow.setText("-");
                eventActorsShow.setText("-");
                eventTimeShow.setText("-");
            }else{
                deleteEventB.setEnabled(true);
                bookB.setEnabled(true);
                String nameOfEvent = performanceL.getSelectedItem().toString();
                info = temp.showEvent(nameOfEvent,false);
                eventTitleShow.setText(nameOfEvent);
                eventDescriptionShow.setText(info.get(1));
                eventDirectorShow.setText(info.get(2));
                eventActorsShow.setText(info.get(3));
                eventTimeShow.setText(info.get(4));
            }
        }else{
        }//*/
    }//GEN-LAST:event_seeEventActionPerformed

    private void bookBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookBActionPerformed
        GUIforHalls temp = new GUIforHalls(movieB.isSelected());
        temp.setLocationRelativeTo(null);
        temp.setVisible(true);
        dispose();
    }//GEN-LAST:event_bookBActionPerformed

    private void editEventBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editEventBActionPerformed
        if(editEventB.getText().equals("Save Event")){
            if(!(eventTitleShow.getText().contains(">~~Dnt@Dlt~~<")
                    ||eventTitleShow.getText().equals("No movies")
                    ||eventTitleShow.getText().equals("No performances")
                    ||eventDescriptionShow.getText().contains(">~~Dnt@Dlt~~<")
                    ||eventDirectorShow.getText().contains(">~~Dnt@Dlt~~<")
                    ||eventActorsShow.getText().contains(">~~Dnt@Dlt~~<")
                    ||eventTimeShow.getText().contains(">~~Dnt@Dlt~~<"))){
                movieB.setEnabled(true);
                performanceB.setEnabled(true);
                List<String> info = new ArrayList<String>();
                String eventNameChecker = eventTitleShow.getText();
                if(addMovieB.isSelected()){ // elegxei ama o xristeis thelei na kanei add to event
                    addMovieB.doClick(); //3etsekarei
                    if(movieB.isSelected()){ 
                        if(movieL.getSelectedItem().equals("No movies")){
                            movieL.removeAllItems(); //Ama thelei na kanei kai to jcompobox den exei teneies tote bgazei to boithitiko event
                        }else{
                            int i=0;
                            while(i<movieL.getItemCount()){
                                if(eventNameChecker.equals(movieL.getSelectedItem())){
                                    eventNameChecker= movieL.getSelectedItem()+" Copy";
                                    movieL.setName(eventNameChecker);
                                    i=-1;
                                }
                                i++;
                            }
                        }
                    }else{
                        if(performanceL.getSelectedItem().equals("No performances")){
                                performanceL.removeAllItems();
                        }else{   
                            int i=0;
                            while(i<performanceL.getItemCount()){
                                if(eventNameChecker.equals(performanceL.getSelectedItem())){
                                    eventNameChecker= eventTitleShow.getText()+" Copy";
                                    eventTitleShow.setText(eventNameChecker);
                                    i=-1;
                                }
                                i++;
                            }
                        }           
                    }
                }
                if(movieB.isSelected()){
                    info.add("1");
                }else{
                    info.add("-1");    
                }
                
                //addMovieB.setEnabled(false);
                info.add(eventDescriptionShow.getText());
                info.add(eventDirectorShow.getText());
                info.add(eventActorsShow.getText());
                info.add(eventTimeShow.getText());
                Event temp = new Event();
                temp.editEvent(eventNameChecker, info, movieB.isSelected());
                //dispose();
                GUIforUser temp1 = new GUIforUser();
                temp1.setLocationRelativeTo(null);
                temp1.setVisible(true);
                
                
            }else{
                if(eventTitleShow.getText().equals("No movies")
                    ||eventTitleShow.getText().equals("No performances")){
                    JOptionPane.showMessageDialog(null, "Please put a real name for the event.",
                            "Error message", JOptionPane.PLAIN_MESSAGE);
                }else{
                    JOptionPane.showMessageDialog(null, "Please dont use this character sequance "
                            + "\">~~Dnt@Dlt~~<\".", "Error message", JOptionPane.PLAIN_MESSAGE);
                }
            }
        }else if(editEventB.getText().equals("Edit Event")){ //o xristis patise to koumpi gia na kanei edit to event
            deleteEventB.setEnabled(false);
            bookB.setEnabled(false);
            movieL.setEnabled(false);
            performanceL.setEnabled(false);
            movieB.setEnabled(false);
            performanceB.setEnabled(false);
            editEventB.setText("Save Event");

            eventDescriptionShow.setEditable(true);
            eventDirectorShow.setEditable(true);
            eventActorsShow.setEditable(true);
            eventTimeShow.setEditable(true);
            
            cancelChangesB.setEnabled(true);
            cancelChangesB.setVisible(true);
            addMovieB.setEnabled(true);
            addMovieBActionPerformed(evt);
            seeEvent.setEnabled(false);
        }
        
    }//GEN-LAST:event_editEventBActionPerformed

    private void editHallsBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editHallsBActionPerformed
        GUIforHalls temp = new GUIforHalls(movieB.isSelected());
        temp.setLocationRelativeTo(null);
        temp.setVisible(true);
        dispose();
    }//GEN-LAST:event_editHallsBActionPerformed

    private void cancelChangesBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelChangesBActionPerformed
        seeEventActionPerformed(evt);
        editEventB.setText("Edit Event");
        movieB.setEnabled(true);
        performanceB.setEnabled(true);
        if(movieB.isSelected()){
            movieL.setEnabled(true);
        }else if(performanceB.isSelected()){
            performanceL.setEnabled(true);
        }
        deleteEventB.setEnabled(true);
        bookB.setEnabled(true);
        eventTitleShow.setEditable(false);
        eventDescriptionShow.setEditable(false);
        eventDirectorShow.setEditable(false);
        eventActorsShow.setEditable(false);
        eventTimeShow.setEditable(false);
        cancelChangesB.setEnabled(false);
        cancelChangesB.setVisible(false);
        if(addMovieB.isSelected()){
            addMovieB.doClick();
        }
        addMovieB.setEnabled(false);
        seeEvent.setEnabled(true);
    }//GEN-LAST:event_cancelChangesBActionPerformed

    private void eventTitleShowFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_eventTitleShowFocusGained
        if(eventTitleShow.getText().equals("-")){
            eventTitleShow.setText("");
        }
    }//GEN-LAST:event_eventTitleShowFocusGained

    private void eventTitleShowFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_eventTitleShowFocusLost
        if(eventTitleShow.getText().equals("")){
            eventTitleShow.setText("-");
        }
    }//GEN-LAST:event_eventTitleShowFocusLost

    private void eventDescriptionShowFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_eventDescriptionShowFocusGained
        if(eventDescriptionShow.getText().equals("-")){
            eventDescriptionShow.setText("");
        }
    }//GEN-LAST:event_eventDescriptionShowFocusGained

    private void eventDescriptionShowFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_eventDescriptionShowFocusLost
        if(eventDescriptionShow.getText().equals("")){
            eventDescriptionShow.setText("-");
        }
    }//GEN-LAST:event_eventDescriptionShowFocusLost

    private void eventDirectorShowFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_eventDirectorShowFocusGained
        if(eventDirectorShow.getText().equals("-")){
            eventDirectorShow.setText("");
        }
    }//GEN-LAST:event_eventDirectorShowFocusGained

    private void eventDirectorShowFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_eventDirectorShowFocusLost
        if(eventDirectorShow.getText().equals("")){
            eventDirectorShow.setText("-");
        }
    }//GEN-LAST:event_eventDirectorShowFocusLost

    private void eventActorsShowFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_eventActorsShowFocusGained
        if(eventActorsShow.getText().equals("-")){
            eventActorsShow.setText("");
        }
    }//GEN-LAST:event_eventActorsShowFocusGained

    private void eventActorsShowFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_eventActorsShowFocusLost
        if(eventActorsShow.getText().equals("")){
            eventActorsShow.setText("-");
        }
    }//GEN-LAST:event_eventActorsShowFocusLost

    private void eventTimeShowFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_eventTimeShowFocusGained
        if(eventTimeShow.getText().equals("-")){
            eventTimeShow.setText("");
        }
    }//GEN-LAST:event_eventTimeShowFocusGained

    private void eventTimeShowFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_eventTimeShowFocusLost
        if(eventTimeShow.getText().equals("")){
            eventTimeShow.setText("-");
        }
    }//GEN-LAST:event_eventTimeShowFocusLost

    private void deleteEventBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEventBActionPerformed
        int n = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this event?", 
                "Security Question", JOptionPane.YES_NO_OPTION);
        if (n == JOptionPane.YES_OPTION) {
            Event temp = new Event();
            String nameOfEvent;
            if(movieB.isSelected()){
                int numberI = movieL.getSelectedIndex();
                nameOfEvent = movieL.getSelectedItem().toString();
                temp.deleteEvent(nameOfEvent, true);
                movieL.removeItemAt(numberI);
                if(movieL.getItemCount()==0){
                    movieL.addItem("No movies");
                }
            }else{
                int numberI = performanceL.getSelectedIndex();
                nameOfEvent = performanceL.getSelectedItem().toString();
                temp.deleteEvent(nameOfEvent, false);
                performanceL.removeItemAt(numberI);     
                if(performanceL.getItemCount()==0){
                    performanceL.addItem("No performances");
                }  
            }
        } else if (n == JOptionPane.NO_OPTION) {

        }
    }//GEN-LAST:event_deleteEventBActionPerformed

    private void movieLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movieLActionPerformed
        editEventB.setEnabled(false);
        deleteEventB.setEnabled(false);
        bookB.setEnabled(false);
    }//GEN-LAST:event_movieLActionPerformed

    private void performanceLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_performanceLActionPerformed
        editEventB.setEnabled(false);
        deleteEventB.setEnabled(false);
        bookB.setEnabled(false);
    }//GEN-LAST:event_performanceLActionPerformed

    private void addMovieBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMovieBActionPerformed
        if(!addMovieB.isSelected()){
            eventTitleShow.setEditable(false);
            if(movieL.getSelectedItem().equals("No movies")&&movieB.isSelected()||
                performanceL.getSelectedItem().equals("No performances")&&performanceB.isSelected()){
                if(editEventB.getText().equals("Save Event")){
                    addMovieB.doClick();
                }
            }
        }else{
            eventTitleShow.setEditable(true);
        }
    }//GEN-LAST:event_addMovieBActionPerformed

    private void editCinemaHallsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editCinemaHallsActionPerformed
        GUIforHalls temp = new GUIforHalls(true);
        temp.setLocationRelativeTo(null);
        temp.setVisible(true);
        dispose();
    }//GEN-LAST:event_editCinemaHallsActionPerformed

    private void editTheaterHallsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editTheaterHallsActionPerformed
        GUIforHalls temp = new GUIforHalls(false);
        temp.setLocationRelativeTo(null);
        temp.setVisible(true);
        dispose();
    }//GEN-LAST:event_editTheaterHallsActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        if(Account.cPasswordAndRights[1].equals("U")){
            JOptionPane.showMessageDialog(null, "Chooce between cinema movies and theater performances.\n"
                    + "Press \"See event info\" to see the info of that event.\n With book event you can"
                    + "book your event.", 
                    "Help Box",JOptionPane.INFORMATION_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(null, "Chooce between cinema movies and theater performances.\n"
                    + "Press \"See event info\" to see the info of that event.\n With book event you can"
                    + "book your event.\n\nYou can put a new event by editing an excisting one and\n"
                    + "clicking the \"add as new\" checker. You cant change the title of\n"
                    + "the event once you have submit at it.\n"
                    + "You can create a new hall from the drop menu file. You can\n"
                    + "edit the halls for an event from the \"hall\" button", 
                    "Help Box",JOptionPane.INFORMATION_MESSAGE);
        }
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIforUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIforUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIforUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIforUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIforUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu HelpB;
    private javax.swing.JCheckBox addMovieB;
    private javax.swing.JButton bookB;
    private javax.swing.JButton cancelChangesB;
    private javax.swing.JMenuItem changePassword;
    private javax.swing.JMenuItem deleteAccount;
    private javax.swing.JButton deleteEventB;
    private javax.swing.JMenuItem editCinemaHalls;
    private javax.swing.JButton editEventB;
    private javax.swing.JButton editHallsB;
    private javax.swing.JMenuItem editTheaterHalls;
    private javax.swing.JTextArea eventActorsShow;
    private javax.swing.JLabel eventActorsT;
    private javax.swing.JTextArea eventDescriptionShow;
    private javax.swing.JLabel eventDescriptionT;
    private javax.swing.JTextField eventDirectorShow;
    private javax.swing.JLabel eventDirectorT;
    private javax.swing.ButtonGroup eventG;
    private javax.swing.JTextField eventTimeShow;
    private javax.swing.JLabel eventTimeT;
    private javax.swing.JTextField eventTitleShow;
    private javax.swing.JLabel eventTitleT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem logOut;
    private javax.swing.JRadioButton movieB;
    private javax.swing.JComboBox movieL;
    private javax.swing.JRadioButton performanceB;
    private javax.swing.JComboBox performanceL;
    private javax.swing.JMenuItem quit;
    private javax.swing.JButton seeEvent;
    // End of variables declaration//GEN-END:variables
}
